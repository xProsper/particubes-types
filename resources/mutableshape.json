{
  "keywords": [
    "particubes",
    "game",
    "mobile",
    "scripting",
    "cube",
    "voxel",
    "world"
  ],
  "type": "MutableShape",
  "extends": "Shape",
  "description": "A [MutableShape] is an [Object] that carries and displays a set of [Block]s. The difference with [Shape] is that [MutableShape] [Block]s can be modified.",
  "constructors": [
    {
      "description": "Creates a MutableShape with imported [Item].",
      "arguments": [
        {
          "name": "item",
          "type": "Item"
        }
      ],
      "samples": [
        {
          "code": "local s = MutableShape(R.username.itemName)"
        }
      ]
    }
  ],
  "properties": null,
  "functions": [
    {
      "name": "AddBlock",
      "description": "Adds a [Block] to the [This].\n\nReturns created [Block] (or [nil] if it fails).\n",
      "argument-sets": [
        [
          {
            "name": "block",
            "type": "Block"
          }
        ],
        [
          {
            "name": "paletteIndex",
            "type": "integer"
          },
          {
            "name": "position",
            "type": "Number3"
          }
        ],
        [
          {
            "name": "paletteIndex",
            "type": "integer"
          },
          {
            "name": "X",
            "type": "number"
          },
          {
            "name": "Y",
            "type": "number"
          },
          {
            "name": "Z",
            "type": "number"
          }
        ]
      ],
      "return": [
        {
          "type": "Block"
        }
      ],
      "samples": [
        {
          "code": "local block = Block(1, 10, 10, 10)\nsomeMutableShape:AddBlock(block)\n\n-- AddBlock can also be called using\n-- block's palette index and coordinates:\nsomeMutableShape:AddBlock(1, 10, 10, 10)\n\n-- created block is returned:\nlocal newBlock = someMutableShape:AddBlock(1, 10, 10, 10)\nif newBlock ~= nil then\n  -- block successfully created!\nend\n\n-- ⚠️\nlocal block = Block(1, 10, 10, 10)\nlocal newBlock = someMutableShape:AddBlock(block)\n-- Here `newBlock` is not the same as `block`\n-- they both have the same palette index and coordinates\n-- but `newBlock` has a parent shape while `block` doesn't.\n"
        }
      ]
    },
    {
      "name": "GetBlock",
      "description": "Gets a [Block] from the [This]. \nReturns [nil] if there is no [Block] at the given coordinates (i. e. if it's \"air\").\n",
      "arguments": [
        {
          "name": "X",
          "type": "number"
        },
        {
          "name": "Y",
          "type": "number"
        },
        {
          "name": "Z",
          "type": "number"
        }
      ],
      "return": [
        {
          "type": "Block"
        }
      ]
    }
  ]
}